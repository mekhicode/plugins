
https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/install/installation.md

sudo apt-get install -y vim
sudo update-alternatives --set editor /usr/bin/vim.basic

sudo apt-get install -y build-essential zlib1g-dev \
libyaml-dev libssl-dev libgdbm-dev libreadline-dev \
libncurses5-dev libffi-dev curl openssh-server redis-server \
checkinstall libxml2-dev libxslt-dev libcurl4-openssl-dev \
libicu-dev logrotate python-docutils

sudo apt-get install -y libcurl4-openssl-dev libexpat1-dev \
gettext libz-dev libssl-dev build-essential

sudo apt-get install -y git-core

sudo apt-get install -y postfix

sudo apt-get install -y mysql-server mysql-client libmysqlclient-dev
sudo mysql_secure_installation
mysql -u root -p
> create user 'git'@'localhost' identified by '<password>';
> create database if not exists `gitlabhq_production` default character set `utf8` collate `utf8_unicode_ci`;
> grant select, lock tables, insert, update, delete, create, drop, index, alter on `gitlabhq_production`.* to 'git'@'localhost';
> flush privileges;
> \q

sudo -u git -H mysql -u git -p -D gitlabhq_production
> \q

sudo adduser --disabled-login --gecos 'GitLab' git

cd /home/git
sudo -u git -H git clone https://gitlab.com/gitlab-org/gitlab-ce.git -b 7-1-stable gitlab

cd /home/git/gitlab
sudo -u git -H cp config/gitlab.yml.example config/gitlab.yml

sudo -u git -H editor config/gitlab.yml
host: gitlab.example.com

sudo chown -R git log/
sudo chmod -R u+rwX log/

sudo chown -R git tmp/
sudo chmod -R u+rwX tmp/

sudo -u git -H mkdir /home/git/gitlab-satellites
sudo chmod u+rwx,g=rx,o-rwx /home/git/gitlab-satellites

sudo -u git -H mkdir tmp/pids/
sudo chmod -R u+rwX tmp/pids/

sudo -u git -H mkdir tmp/sockets/
sudo chmod -R u+rwX tmp/sockets/

sudo -u git -H mkdir public/uploads
sudo chmod -R u+rwX public/uploads

sudo -u git -H cp config/unicorn.rb.example config/unicorn.rb

sudo -u git -H editor config/unicorn.rb
listen "127.0.0.1:8080", :tcp_nopush => true

sudo -u git -H cp config/initializers/rack_attack.rb.example config/initializers/rack_attack.rb
sudo -u git -H git config --global user.name "GitLab"
sudo -u git -H git config --global user.email "example@example.com"
sudo -u git -H git config --global core.autocrlf input

sudo -u git cp config/database.yml.mysql config/database.yml

sudo -u git -H editor /home/git/gitlab/config/database.yml
production:
  password: "<password>"

sudo -u git -H chmod o-rwx config/database.yml

sudo -u git -H bundle install --deployment --without development test postgres aws

sudo -u git -H bundle exec rake gitlab:shell:install[v1.9.6] REDIS_URL=redis://localhost:6379 RAILS_ENV=production

sudo -u git -H editor /home/git/gitlab-shell/config.yml
gitlab_url: "http://gitlab.example.com/"

sudo -u git -H bundle exec rake gitlab:setup RAILS_ENV=production

sudo cp lib/support/init.d/gitlab /etc/init.d/gitlab
sudo cp lib/support/init.d/gitlab.default.example /etc/default/gitlab

sudo update-rc.d gitlab defaults 21

sudo cp lib/support/logrotate/gitlab /etc/logrotate.d/gitlab

sudo -u git -H bundle exec rake gitlab:env:info RAILS_ENV=production

sudo -u git -H bundle exec rake assets:precompile RAILS_ENV=production

sudo service gitlab restart

sudo apt-get install -y nginx

sudo cp lib/support/nginx/gitlab /etc/nginx/sites-available/gitlab
sudo ln -s /etc/nginx/sites-available/gitlab /etc/nginx/sites-enabled/gitlab

sudo editor /etc/nginx/sites-available/gitlab
listen *:80;
server_name gitlab.example.com;

sudo service nginx restart

sudo -u git -H bundle exec rake gitlab:check RAILS_ENV=production

http://gitlab.example.com/
#username: root
#password: 5iveL!fe

